{{- if and .Values.temporal.enabled .Values.temporal.admintools.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "core.temporal.admintools" . }}
  labels:
    {{- include "core.labels" . | nindent 4 }}
    app.kubernetes.io/component: temporal-admintools
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "core.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: temporal-admintools
  template:
    metadata:
      labels:
        {{- include "core.matchLabels" . | nindent 8 }}
        app.kubernetes.io/component: temporal-admintools
      {{- with $.Values.temporal.admintools.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.temporal.ui.serviceAccountName }}
      serviceAccountName: {{ .Values.temporal.ui.serviceAccountName }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.temporal.ui.automountServiceAccountToken | default false }}
      terminationGracePeriodSeconds: 120
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      {{- if .Values.database.enabled }}
        - name: wait-for-db
          image: {{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}
          imagePullPolicy: {{ $.Values.database.image.pullPolicy }}
          command: ['sh', '-c', "until pg_isready; do echo waiting for db; sleep 2; done"]
          env:
          - name: PGHOST
            value: {{ template "core.database" . }}
          - name: PGUSER
            value: {{ template "core.database.username" . }}
      {{- end }}
      containers:
        - name: temporal-admin-tools
          image: {{ .Values.temporal.admintools.image.repository }}:{{ .Values.temporal.admintools.image.tag }}
          imagePullPolicy: {{ .Values.temporal.admintools.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
              - ls
              - /
            periodSeconds: 5
          command: ["/bin/bash", "-c"]
          args:
            - >
              if ! psql -h ${SQL_HOST} -p ${SQL_PORT} -U ${SQL_USER} -W ${SQL_PASSWORD} -c "SELECT datname FROM pg_catalog.pg_database WHERE datname='temporal'" | grep -q "1 row"; then
                SQL_DATABASE=temporal temporal-sql-tool drop -f &&
                SQL_DATABASE=temporal temporal-sql-tool create &&
                SQL_DATABASE=temporal temporal-sql-tool setup -v 0.0 &&
                SQL_DATABASE=temporal temporal-sql-tool update-schema -d schema/postgresql/v96/temporal/versioned &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool drop -f &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool create &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool setup -v 0.0 &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool setup-schema -v 0.0 &&
                SQL_DATABASE=temporal_visibility temporal-sql-tool update -schema-dir schema/postgresql/v96/visibility/versioned
              fi &&
              tail -f /dev/null
          ports:
            - name: http
              containerPort: 22
              protocol: TCP
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "{{ template "core.temporal" . }}-frontend:{{ template "core.temporal.frontend.grpcPort" . }}"
            - name:  SQL_PLUGIN
              value: "postgres"
            - name:  SQL_HOST
              value: "{{ template "core.database" . }}"
            - name:  SQL_PORT
              value: "{{ template "core.database.port" . }}"
            - name:  SQL_USER
              value: "{{ template "core.database.username" . }}"
            - name:  SQL_PASSWORD
              value: "{{ template "core.database.rawPassword" . }}"
      {{- with .Values.temporal.admintools.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.temporal.admintools.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.temporal.admintools.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

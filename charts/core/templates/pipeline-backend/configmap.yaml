apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "core.pipelineBackend" . }}
  labels:
    {{- include "core.labels" . | nindent 4 }}
    app.kubernetes.io/component: pipeline-backend
data:
  config.yaml: |+
    server:
      privateport: {{ include "core.pipelineBackend.privatePort" . }}
      publicport: {{ include "core.pipelineBackend.publicPort" . }}
      edition: {{ .Values.edition }}
      usage:
        {{- toYaml .Values.usage | nindent 8 }}
      debug: {{ ternary "true" "false" (eq (.Values.logLevel | upper) "DEBUG") }}
      maxdatasize: {{ .Values.maxDataSizeMB }}
      workflow:
        maxworkflowtimeout: {{ .Values.pipelineBackend.workflow.maxWorkflowTimeout }}
        maxworkflowretry: {{ .Values.pipelineBackend.workflow.maxWorkflowRetry }}
        maxactivityretry: {{ .Values.pipelineBackend.workflow.maxActivityRetry }}
      instillcorehost: {{ .Values.pipelineBackend.instillCoreHost }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/pipeline/ssl/pipeline/tls.crt
        key: /etc/instill-ai/pipeline/ssl/pipeline/tls.key
      {{- end }}
      instanceid: {{ include "core.pipelineBackend" . }}
    mgmtbackend:
      host: {{ include "core.mgmtBackend" . }}
      publicport: {{ include "core.mgmtBackend.publicPort" . }}
      privateport: {{ include "core.mgmtBackend.privatePort" . }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/pipeline/ssl/mgmt/tls.crt
        key: /etc/instill-ai/pipeline/ssl/mgmt/tls.key
      {{- end }}
    artifactbackend:
      host: {{ include "core.artifactBackend" . }}
      publicport: {{ include "core.artifactBackend.publicPort" . }}
      privateport: {{ include "core.artifactBackend.privatePort" . }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/pipeline/ssl/artifact/tls.crt
        key: /etc/instill-ai/pipeline/ssl/artifact/tls.key
      {{- end }}
    modelbackend:
      host: {{ include "core.modelBackend" . }}
      publicport: {{ include "core.modelBackend.publicPort" . }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/pipeline/ssl/model/tls.crt
        key: /etc/instill-ai/pipeline/ssl/model/tls.key
      {{- end }}
    database:
      username: {{ include "core.database.username" . }}
      password: {{ include "core.database.password" . }}
      host: {{ include "core.database.host" . }}
      port: {{ include "core.database.port" . }}
      {{- if .Values.database.externalReplica }}
      replica:
        username: {{ .Values.database.externalReplica.username | default "" }}
        password: {{ .Values.database.externalReplica.password | default "" }}
        host: {{ .Values.database.externalReplica.host | default ""  }}
        port: {{ .Values.database.externalReplica.port | default ""  }}
        replicationtimeframe: 1
      {{- end }}
      name: pipeline
      timezone: Etc/UTC
      pool:
        idleconnections: {{ .Values.database.maxIdleConns }}
        maxconnections: {{ .Values.database.maxOpenConns }}
        connlifetime: {{ .Values.database.maxConnLifeTime }}
    influxdb:
      url: {{ include "core.influxdb2.url" . }}
      token: {{ include "core.influxdb2.token" . }}
      org: {{ include "core.influxdb2.organization" . }}
      bucket: {{ include "core.influxdb2.bucket" . }}
      flushinterval: 10s
      https:
        cert:
        key:
    cache:
      redis:
        redisoptions:
          addr: {{ default (include "core.redis.addr" .) .Values.redis.external.addr }}
    temporal:
      hostport: {{ default (printf "%s:%s" (include "temporal.host" .) (include "temporal.frontend.grpcPort" .)) .Values.pipelineBackend.temporal.hostPort }}
      namespace: {{ default "instill-core" .Values.pipelineBackend.temporal.namespace }}
      servername: {{ default "" .Values.pipelineBackend.temporal.serverName }}
      serverrootca: {{ default "" .Values.pipelineBackend.temporal.serverRootCA }}
      clientcert: {{ default "" .Values.pipelineBackend.temporal.clientCert }}
      clientkey: {{ default "" .Values.pipelineBackend.temporal.clientKey }}
      insecureskipverify: {{ default "true" .Values.pipelineBackend.temporal.insecureSkipVerify }}
      metricsport: 9090
    otelcollector:
      enable: {{ .Values.tags.observability }}
      host: {{ include "core.otel" . }}
      port: {{ include "core.otel.port" . }}
    openfga:
      host: {{ include "core.openfga" . }}
      port: 8081
    minio:
      host: {{ include "minio.host" . }}
      port: {{ include "minio.port" . }}
      user: {{ .Values.pipelineBackend.minio.user }}
      password: {{ .Values.pipelineBackend.minio.password }}
      bucketname: {{ .Values.pipelineBackend.minio.bucketname }}
      secure: {{ .Values.pipelineBackend.minio.secure }}
    apigateway:
      host: {{ include "core.apiGateway" . }}
      publicport: {{ include "core.apiGateway.httpPort" . }}
      tlsenabled: {{ .Values.apiGateway.tls.enabled }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "core.modelBackend" . }}
  labels:
    {{- include "core.labels" . | nindent 4 }}
    app.kubernetes.io/component: model-backend
data:
  config.yaml: |+
    server:
      privateport: {{ include "core.modelBackend.privatePort" . }}
      publicport: {{ include "core.modelBackend.publicPort" . }}
      edition: {{ .Values.edition }}
      usage:
        {{- toYaml .Values.usage | nindent 8 }}
      debug: {{ ternary "true" "false" (eq (.Values.logLevel | upper) "DEBUG") }}
      maxdatasize: {{ .Values.maxDataSizeMB }}
      workflow:
        maxworkflowtimeout: {{ .Values.modelBackend.temporal.workflow.maxWorkflowTimeout }}
        maxworkflowretry: {{ .Values.modelBackend.temporal.workflow.maxWorkflowRetry }}
        maxactivityretry: {{ .Values.modelBackend.temporal.workflow.maxActivityRetry }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/model/ssl/model/tls.crt
        key: /etc/instill-ai/model/ssl/model/tls.key
      {{- end }}
      instillcorehost: {{ .Values.modelBackend.instillCoreHost }}
      taskschemaversion: {{ .Values.modelBackend.taskSchemaVersion }}
    otelcollector:
      enable: {{ .Values.tags.observability }}
      host: {{ include "core.otel" . }}
      port: {{ include "core.otel.port" . }}
    mgmtbackend:
      host: {{ include "core.mgmtBackend" . }}
      publicport: {{ include "core.mgmtBackend.publicPort" . }}
      privateport: {{ include "core.mgmtBackend.privatePort" . }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/model/ssl/mgmt/tls.crt
        key: /etc/instill-ai/model/ssl/mgmt/tls.key
      {{- end }}
    artifactbackend:
      host: {{ include "core.artifactBackend" . }}
      publicport: {{ include "core.artifactBackend.publicPort" . }}
      privateport: {{ include "core.artifactBackend.privatePort" . }}
      {{- if .Values.internalTLS.enabled }}
      https:
        cert: /etc/instill-ai/core/ssl/artifact/tls.crt
        key: /etc/instill-ai/core/ssl/artifact/tls.key
      {{- end }}
    ray:
      host: {{ include "core.kuberay.host" . }}
      port:
        grpc: {{ include "core.kuberay.grpcPort" . }}
        client: {{ include "core.kuberay.clientPort" . }}
        dashboard: {{ include "core.kuberay.dashboardPort" . }}
        gcs: {{ include "core.kuberay.gcsPort" . }}
        serve: {{ include "core.kuberay.servePort" . }}
        metrics: {{ include "core.kuberay.metricsPort" . }}
    database:
      username: {{ include "core.database.username" . }}
      password: {{ include "core.database.password" . }}
      host: {{ include "core.database.host" . }}
      port: {{ include "core.database.port" . }}
      {{- if .Values.database.externalReplica }}
      replica:
        username: {{ .Values.database.externalReplica.username | default "" }}
        password: {{ .Values.database.externalReplica.password | default "" }}
        host: {{ .Values.database.externalReplica.host | default ""  }}
        port: {{ .Values.database.externalReplica.port | default ""  }}
        replicationtimeframe: 1
      {{- end }}
      name: model
      timezone: Etc/UTC
      pool:
        idleconnections: {{ .Values.database.maxIdleConns }}
        maxconnections: {{ .Values.database.maxOpenConns }}
        connlifetime: {{ .Values.database.maxConnLifeTime }}
    cache:
      redis:
        redisoptions:
          addr: {{ default (include "core.redis.addr" .) .Values.redis.external.addr }}
    temporal:
      hostport: {{ default (printf "%s-frontend-headless:%s" (include "core.temporal" .) (include "core.temporal.frontend.grpcPort" .)) .Values.modelBackend.temporal.hostPort }}
      namespace: {{ default "model-backend" .Values.modelBackend.temporal.namespace }}
      retention: {{ default "1d" .Values.modelBackend.temporal.retention }}
      serverrootca: {{ default "" .Values.modelBackend.temporal.serverRootCA }}
      clientcert: {{ default "" .Values.modelBackend.temporal.clientCert }}
      clientkey: {{ default "" .Values.modelBackend.temporal.clientKey }}
      serverName: {{ default "" .Values.modelBackend.temporal.serverName }}
      insecureskipverify: {{ default "true" .Values.modelBackend.temporal.insecureSkipVerify }}
    initmodel:
      {{- toYaml .Values.modelBackend.initModel | nindent 6 }}
    openfga:
      host: {{ include "core.openfga" . }}
      port: 8081
      {{- if .Values.database.externalReplica }}
      replica:
        host: {{ include "core.openfga" . }}
        port: 8083
        replicationtimeframe: 1
      {{- end }}
    registry:
      {{- if .Values.namespaceOverride }}
      host: {{ include "core.registry" . }}.{{ include "core.namespace" . }}.svc.cluster.local
      {{- else }}
      host: {{ include "core.registry" . }}
      {{- end }}
      port: {{ include "core.registry.port" . }}
    influxdb:
      url: {{ include "core.influxdb2.url" . }}
      token: {{ include "core.influxdb2.token" . }}
      org: {{ include "core.influxdb2.organization" . }}
      bucket: {{ include "core.influxdb2.bucket" . }}
      flushinterval: 10s
      https:
        cert:
        key:
    minio:
      host: {{ include "minio.host" . }}
      port: {{ include "minio.port" . }}
      user: {{ .Values.modelBackend.minio.user }}
      password: {{ .Values.modelBackend.minio.password }}
      bucketname: {{ .Values.modelBackend.minio.bucketname }}
      secure: {{ .Values.modelBackend.minio.secure }}

# -- Name to override
nameOverride:

# -- Full name to override
fullnameOverride:

# -- Number of instances to deploy for the KrakenD API Gateway deployment
replicaCount: 1

# -- The pull image secret
imagePullSecrets:

image:
  # -- The image registry address
  registry: instill
  # -- The image repository name
  repository: api-gateway
  # -- The image tag
  tag: latest
  # -- The image pulling policy
  pullPolicy: Always #IfNotPresent

debug:
  # -- Enable KrakenD debug mode
  enabled: false

ingress:
  # -- Ingress enable/disable
  enabled: true
  # -- Ingress annotations
  annotations: {}
  # -- Ingress hosts
  hosts:
    - localhost
  # -- Ingress paths
  paths:
    - /v1alpha

  # -- Ingress pathType
  pathType: Prefix
  # -- Ingress TLS certificates
  tls:
    - secretName:
      hosts:
        -

service:
  # -- Service annotations
  annotations: {}
  # -- Service type
  type: LoadBalancer
  # -- NodePort for https port
  nodePortHttp:
  # -- NodePort for stats port
  nodePortStats:
  # -- NodePort for metrics port
  nodePortMetrics:

# -- The strategy used to replace old Pods by new ones, which can be "Recreate" or "RollingUpdate". "RollingUpdate" is the default value.
strategy: {}

# -- Resources assigned to the API Gateway. This is left empty by default to allow the user to
# configure it at install time. Resources should not be hardcoded here, but specified at install
# time to provide flexibility
resources: {}

# -- Pod nodeSelector
nodeSelector: {}

# -- Pod tolerations
tolerations: []

# -- Pod affinity
affinity: {}

# -- Additional deployment annotations
podAnnotations: {}

apiGateway:
  host: api-gateway
  port:
    http: 8000
    stats: 8090
    metrics: 9000
  https:
    cert: # /ssl/tls.crt
    key: # /ssl/tls.key
  # -- LivenessProbe
  livenessProbe:
    httpGet:
      path: /__health
      scheme: HTTP
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
  # -- ReadynessProbe
  readinessProbe:
    httpGet:
      path: /__health
      scheme: HTTP
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10

mgmtBackend:
  host: mgmt-backend.mgmt-backend
  port: 8084
  https:
    cert: # /ssl/tls.crt
    key: # /ssl/tls.key

modelBackend:
  host: model-backend.model-backend
  port: 8083
  https:
    cert: # /ssl/tls.crt
    key: # /ssl/tls.key

pipelineBackend:
  host: pipeline-backend.pipeline-backend
  port: 8081
  https:
    cert: # /ssl/tls.crt
    key: # /ssl/tls.key

connectorBackend:
  host: connector-backend.connector-backend
  port: 8082
  https:
    cert: # /ssl/tls.crt
    key: # /ssl/tls.key

podDisruptionBudget:
  enabled: false
  spec:
    minAvailable: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
#!/bin/bash

namespace="vdp"

helm repo add instill https://helm.instill.tech
helm repo update
helm install vdp instill/vdp --devel --namespace $namespace --create-namespace --set enableITMode=true


#helm install vdp . --devel --namespace $namespace --create-namespace --set enableITMode=true  &>/dev/null 


export MODEL_POD_NAME=$(kubectl get pods --namespace vdp -l "app.kubernetes.io/component=model,app.kubernetes.io/instance=vdp" -o jsonpath="{.items[0].metadata.name}")
while [[ $(kubectl get pods $MODEL_POD_NAME -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}' --namespace vdp) != "True" ]]; do echo "waiting for pod" && sleep 1; done

export APIGATEWAY_POD_NAME=$(kubectl get pods --namespace vdp -l "app.kubernetes.io/component=api-gateway,app.kubernetes.io/instance=vdp" -o jsonpath="{.items[0].metadata.name}")

export APIGATEWAY_CONTAINER_PORT=$(kubectl get pod --namespace vdp $APIGATEWAY_POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")

export CONSOLE_POD_NAME=$(kubectl get pods --namespace vdp -l "app.kubernetes.io/component=console,app.kubernetes.io/instance=vdp" -o jsonpath="{.items[0].metadata.name}")

export CONSOLE_CONTAINER_PORT=$(kubectl get pod --namespace vdp $CONSOLE_POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")



if [[ $(netstat -anv | grep 127.0.0.1.3000) ]]; then
echo "WARN: 3000 port is already in use."
fi

echo " "

if [[ $(netstat -anv | grep 127.0.0.1.8080) ]]; then
echo "WARN: 8080 port is already in use."
fi


kubectl --namespace vdp port-forward $APIGATEWAY_POD_NAME 8080:${APIGATEWAY_CONTAINER_PORT} & &>/dev/null
kubectl --namespace vdp port-forward $CONSOLE_POD_NAME 3000:${CONSOLE_CONTAINER_PORT} & &>/dev/null


#kubectl wait --for=condition=Ready pod --all -n $namespace --timeout=300s

#service_list=$(kubectl get services -n $namespace --no-headers=true | awk '{print $1}')

sleep 15

pod_list=$(kubectl get pods -n $namespace --no-headers=true | awk '{print $1}')

for pod_name in $pod_list
do
  pod_status=$(kubectl get pod $pod_name -n $namespace | grep Running | awk -F " " '{print $3}')

  if [[ "$pod_status" != "Running" ]]; then
    echo "Error: $pod_name pod is not running"
  fi
done

echo " "

echo "All remaining pods are running."


pod_gw=$(kubectl get po -n vdp --no-headers=true | awk '{print $1}' | grep gateway)
pod_console=$(kubectl get po -n vdp --no-headers=true | awk '{print $1}' | grep console)

curl --silent --fail http://localhost:3000 &>/dev/null
echo "console OK"

curl --silent --fail http://localhost:8080 &>/dev/null
echo "api-gateway OK"



# Helm chart'ını silin.
#helm uninstall my-vdp --namespace $namespace


# -- Name to override
nameOverride:

# -- Full name to override
fullnameOverride:

# -- Number of instances to deploy for the server deployment
replicaCount: 1

# -- The pull image secret
imagePullSecrets:

# -- host architect
arch: amd

mode:
  # -- Enable/Disable CPU inference
  useCpu: true

tritonEnv:
  # -- The image registry address
  registry: registry.hub.docker.com/instill
  # -- The image repository name
  repository: triton-conda-env
  # -- The image tag
  tag: 0.2.6-alpha
  # -- Image pull policy
  pullPolicy: IfNotPresent

image:
  # -- The image registry address
  registry: registry.hub.docker.com/instill
  # -- The image repository name
  repository: tritonserver
  # -- The image tag
  tag: 22.05
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Path to the model repository. Either a local path if `modelRepositoryStorage = local` (e.g. `/raid/triton-repo-2011/models`)
  # or a gcs path if `modelRepositoryStorage = gcs` (e.g. gs://instill-europe-west2-triton-models)
  modelRepositoryPath: /model-repository
  condaPackPath: /conda-pack # -- Path to the conda environment file for Python Backend model.
  condaPackFileName: python-3-8.tar.gz
  numGpus: 1

service:
  # -- Kubernetes service type
  type: NodePort
  # -- Kubernetes internal service port for HTTP/REST endpoint
  portHttp: 8000
  # -- Kubernetes internal service port for gRPC endpoint
  portGrpc: 8001
  #Â -- Kubernetes internal service port for Metrics endpoint
  portMetrics: 8002
  # -- Kubernetes service nodePort for HTTP/REST endpoint (optional).
  # If the service node port is not set, the Kubernetes control plane will allocate a port from a range (default for NodePort use: 30000-32767).
  # If it is set to a specific port, the control plane will either allocate you that port or report failure. This means you need to take care of
  # possible port colisions. You also have to use a valid port number, one that's inside the above range.
  nodePortHttp: 31000
  # -- Kubernetes service nodePort for gRPC endpoint (optional). Same remarks.
  nodePortGrpc: 31001
  # --  Kubernetes service nodePort for Metrics endpoint (optional). Same remarks.
  nodePortMetrics: 31002

# -- Pod nodeSelector
nodeSelector: {}

# -- Pod tolerations
tolerations: []

# -- Pod affinity
affinity: {}

# -- Additional deployment annotations
podAnnotations: {}

## -- Configure pod disruption budgets
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable:
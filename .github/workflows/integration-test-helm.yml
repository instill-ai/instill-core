name: Integration Test (Helm)

on:
  push:

jobs:
  integratoin-test-helm:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Maximize GA space
        uses: AdityaGarg8/remove-unwanted-software@v1
        with:
          remove-android: "true"

      - name: Delete huge unnecessary tools folder
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: rm -rf /usr/share/dotnet && rm -rf /opt/ghc && rm -rf "/usr/local/share/boost" &&  rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Increase free space
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt clean
          df -h

      - name: Checkout
        uses: actions/checkout@v3

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Install k6 (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          curl https://github.com/grafana/k6/releases/download/v${{ env.K6_VERSION }}/k6-v${{ env.K6_VERSION }}-linux-amd64.tar.gz -L | tar xvz --strip-components 1 && sudo cp k6 /usr/bin

      - name: Install k6 (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          curl https://github.com/grafana/k6/releases/download/v${{ env.K6_VERSION }}/k6-v${{ env.K6_VERSION }}-macos-amd64.zip -L | tar xvz --strip-components 1 && chmod 755 k6 && cp k6 /usr/local/bin

      - name: Setup Minikube (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: medyagh/setup-minikube@master
        with:
          cache: false
          cpus: 2
          memory: 6144m

      - name: Set up Docker (MacOs)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install docker

      - name: Setup Minikube (MacOs)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: medyagh/setup-minikube@master
        with:
          cache: false
          cpus: 3
          memory: 6144m

      - name: Pull images
        run: |
          export SHELL=/bin/bash
          eval $(minikube docker-env)
          docker pull instill/api-gateway:latest
          docker pull instill/pipeline-backend:latest
          docker pull instill/connector-backend:latest
          docker pull instill/model-backend:latest
          docker pull instill/mgmt-backend:latest
          docker pull instill/controller:latest
          docker pull instill/console:latest
          docker pull instill/tritonserver:22.12
          docker pull instill/triton-conda-env:latest-cpu
          docker pull postgres:15-alpine
          docker pull temporalio/admin-tools:1.19.1
          docker images

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.botGitHubToken }}

      - name: Change dir
        run: cd charts/vdp && ls

      - name: Run script file
        run: |
          chmod +x ./charts/test.sh
          ./charts/test.sh

      - name: Check vdp namespace
        if: success() || failure()
        run: kubectl get po -n vdp

      - name: Checkout (pipeline)
        if: success() || failure()
        uses: actions/checkout@v3
        with:
          repository: instill-ai/pipeline-backend

      - name: Load .env file
        if: success() || failure()
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test
        if: success() || failure()
        run: |
          make integration-test MODE=localhost

      - name: Checkout (connector)
        if: success() || failure()
        uses: actions/checkout@v3
        with:
          repository: instill-ai/connector-backend

      - name: Load .env file
        if: success() || failure()
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test
        if: success() || failure()
        run: |
          make integration-test MODE=localhost

      - name: Checkout (model)
        if: success() || failure()
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model-backend

      - name: Load .env file
        if: success() || failure()
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test
        if: success() || failure()
        run: |
          make integration-test MODE=localhost

      - name: Checkout (mgmt)
        if: success() || failure()
        uses: actions/checkout@v3
        with:
          repository: instill-ai/mgmt-backend

      - name: Load .env file
        if: success() || failure()
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test
        if: success() || failure()
        run: |
          make integration-test MODE=localhost

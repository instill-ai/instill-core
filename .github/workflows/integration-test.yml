name: Integration Test

on:
  push:
    branches:
      - "**"

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env
          expand: true

      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Install k6
        run: |
          curl https://github.com/grafana/k6/releases/download/v${{ env.K6_VERSION }}/k6-v${{ env.K6_VERSION }}-linux-amd64.tar.gz -L | tar xvz --strip-components 1 && sudo cp k6 /usr/bin

      - name: Run latest VDP
        run: make dev PROFILE=all ITMODE=true CONSOLE_BASE_URL_HOST=console CONSOLE_BASE_API_GATEWAY_URL_HOST=api-gateway

      - name: Run pipeline-backend integration test
        run: |
          git clone https://github.com/instill-ai/pipeline-backend.git pipeline-backend
          cd pipeline-backend
          make integration-test MODE=localhost

      - name: Run connector-backend integration test
        run: |
          git clone https://github.com/instill-ai/connector-backend.git connector-backend
          cd connector-backend
          make integration-test MODE=localhost

      - name: Run model-backend integration test
        run: |
          git clone https://github.com/instill-ai/pipeline-backend.git model-backend
          cd model-backend
          make integration-test MODE=localhost

      - name: Run mgmt-backend integration test
        run: |
          git clone https://github.com/instill-ai/pipeline-backend.git mgmt-backend
          cd mgmt-backend
          make integration-test MODE=localhost

      - name: Run console integration test
        run: |
          git clone https://github.com/instill-ai/console.git console
          cd console && docker build --build-arg TEST_USER='root' -f Dockerfile.playwright -t console-playwright .
          docker run -t --rm \
            -e NEXT_PUBLIC_CONSOLE_BASE_URL=http://console:3000 \
            -e NEXT_PUBLIC_API_GATEWAY_BASE_URL=https://api-gateway:8080 \
            -e NEXT_PUBLIC_API_VERSION=v1alpha \
            -e NEXT_PUBLIC_SELF_SIGNED_CERTIFICATION=true \
            -e NEXT_PUBLIC_INSTILL_AI_USER_COOKIE_NAME=instill-ai-user \
            --network instill-network \
            --entrypoint ./entrypoint-playwright.sh \
            --name console-integration-test console-playwright
